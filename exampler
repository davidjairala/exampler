#!/usr/bin/env ruby
require 'fileutils'

module Exampler
  class Cli

    def initialize(cwd)
      @cwd = cwd.strip
    end

    def process_files!
      with_lines do
        puts "going over example yml files and processing..."
      end

      example_files.each do |file|
        process_file!(file)
      end
    end

    def process_file!(file_path)
      puts "* processing #{file_path}"

      copy_path = file_path.gsub(/\.example\.yml$/, '.yml')

      if File.exist?(copy_path)
        if files_identical?(file_path, copy_path)
          puts "** file already exists--but they're identical. Moving on!"
          return
        else
          puts "** file already existsâ€¦"
          puts "** here's the diff:"

          system "git diff --no-index #{copy_path} #{file_path}"
        end

        if prompt_yes_no?("[?] overwrite [#{copy_path}] with new [#{file_path}]?")
          puts "** OK! overwriting [#{copy_path}]"
        else
          return
        end
      end

      copy(file_path, copy_path)
    end

    private

    def with_lines
      linebreak
      yield
      linebreak
    end

    def linebreak
      puts "==================================================="
    end

    def example_files
      %x[ls #{@cwd}/config/*.example.yml].split("\n")
    end

    def copy(from, to)
      %x[cp #{from} #{to}]
      puts "** copied #{from} -- to -- #{to}"
    end

    def prompt_yes_no?(prompt)
        puts "#{prompt} (y/N)"
        gets.chomp.start_with?("Y", "y")
    end

    def files_identical?(f1, f2)
      FileUtils.compare_file(f1, f2)
    end

  end
end

cli = Exampler::Cli.new(%x[pwd].chomp)
cli.process_files!